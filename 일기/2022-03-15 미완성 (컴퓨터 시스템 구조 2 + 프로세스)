DMA - 바이트가 아닌 블록 단위로 인터럽트 발생시킴

메모리에는 register - 캐쉬 메모리 - 메인 메모리 - 하드디스크 - ....
가 존재하고 register가 제일 비싸고, 용량이 적다. 대신 그만큼 빠르다.
용량이 큰 프로그램은 설치할때 하드디스크에 설치하는게 보통이다. 이때 하드디스크에서 읽어와서 프로그램을 실행시킬경우
CPU와의 거리도 멀기때문에 속도가 느린데, 이러한 속도 문제를 해결하기위해서 캐쉬 메모리에 프로그램을 미리 저장해놔서
처리 속도를 향상시킨다.

PCB 프로세스 컨트롤 블록
메모리의 주소는 code, data, stack, heap 영역으로 구성되어있는데, code는 명령어(instruction), data는 지역,전역 변수, stack은 함수 정보,
heap은 사용자가 할당할 수 있는 메모리영역을 의미한다.

virtual memory는 메모리에 올라갈 프로그램의 code data stack 주소 영역을 가상화한 것이다.
프로그램이 메모리에 올라갈때 code data stack 메모리가 그대로 올라가지않고 필요한 영역의 데이터만 올려서
프로그램을 실행시킨다.
------------------------------------------------------------------------------------------------------------------------
프로세스는 실행중인 프로그램을 의미한다.

프로세스 문맥(Context)은 프로세스가 현재 어디까지 진행되었는지를 나타내는 정보이다.

컴퓨터의 레지스터에는 Process Counter(PC)라는 것이 존재하는데 이는 프로그램의 code 영역중 
어느 instruction를 수행하고 있는지를 나타내는 커서이다.

레지스터에는 어느 인스트럭션까지 진행했는지를 기록한다.

PCB는 Process control block이며 register와 PC 로 구성되어있다.

문맥 전환은 프로세스 A에서 System 콜에 의해 프로세스 B로 바뀔경우 PCB에 저장된 문맥값이 A에서 B로 넘어가기때문에
문맥 전환이라고 표현한다.

스케쥴링 롱 텀 스케쥴링, 쇼츠 텀 스케쥴링, 미들 텀 스케쥴링이 존재하며
롱 텀 스케쥴링은 프로세스에게 메모리를 줄 지 말지를 결정하는 스케쥴링
쇼츠 텀 스케쥴링은 프로세스에게 CPU를 줄 지 말지를 결정하는 스케쥴링
미들 텀 스케쥴링은 기본적으로 메모리에 프로그램을 전부 올려놓고(즉, 일단 모두 ready 상태로) 스케쥴러가 메모리 상태에 따라
메모리를 빼앗고 디스크로 보내는 스케쥴링을 말한다.

프로세스의 상태 표현은 총 4가지가 존재한다.
Ready - Running - blocked - Suspended가 존재한다.
Ready는 메모리를 제대로 받았고 CPU를 받으면 실행가능한 상태를 말한다.
Running은 프로세스가 CPU를 받고 실행중인 상태를 의미한다.
blocked는 프로세스가 I/O와 같은 요청을 했을때 CPU를 넘겨주고 기다리고있는 상태를 의미한다.
Suspended는 미들 텀 스케쥴러에 의해 메모리를 빼앗겨서 멈춰있는 상태를 의미한다.
